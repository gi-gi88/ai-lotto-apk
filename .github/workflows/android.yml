# .github/workflows/android.yml
name: Build Android APK

# main 브랜치에 push 될 때마다 실행
on:
  push:
    branches: [ main ]

jobs:
  build:
    # Ubuntu 가상환경에서 실행
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Java (JDK) 설정 ─ Cordova/Gradle 빌드용
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3. Node.js 설정 ─ npm/Cordova 빌드용
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 4. 프로젝트 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 5. Cordova/Gradle로 Android APK 빌드
      - name: Build Android debug APK
        run: |
          # Cordova 프로젝트라면:
          npx cordova prepare android
          npx cordova build android --debug
          # 혹은 Flutter/ReactNative/Gradle 직접 빌드 명령어
          # cd android && ./gradlew assembleDebug

      # 6. 빌드된 APK를 artifacts 폴더로 복사
      - name: Collect APK artifact
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          # Cordova 기본 경로
          cp platforms/android/app/build/outputs/apk/debug/app-debug.apk \
             $GITHUB_WORKSPACE/artifacts/

      # 7. APK를 GitHub Actions 아티팩트로 업로드
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-apk
          path: artifacts/app-debug.apk
